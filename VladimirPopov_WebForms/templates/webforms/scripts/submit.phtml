<script type="text/javascript">
    require([
        'VladimirPopov_WebForms/js/form',
        'jquery',
        'VladimirPopov_WebForms/js/sweetalert',
        'jquery/jquery.cookie'
    ], function(VarienForm, jQuery, swal) {
        var blockId = 'webform_<?= $this->getUid() ?>';
        var jblockId = '#' + blockId;
        var webform_<?= $this->getUid() ?> = new VarienForm(blockId, <?= (int) $this->getData('focus') ?>);

        <?php if ($this->getAjax()) { ?>

            // Ajax submit
            jQuery('body').on('click', jblockId + ' .action.submit', function(e) {
                var form = webform_<?= $this->getUid() ?>;
                if (typeof tinyMCE === 'object') tinyMCE.triggerSave();

                if (!(form.validator && form.validator.validate())) {
                    return;
                }
                var formData = new FormData(jQuery(jblockId)[0]);
                var self = this;

                e.preventDefault();
                e.stopImmediatePropagation();

                jQuery.ajax({
                    url: '<?= $this->getUrl('webforms/form/submit'); ?>',
                    data: formData,
                    type: 'POST',
                    cache: false,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    beforeSend: function() {
                        self.disable();
                        $(blockId + '_sending_data').show();
                    },
                    success: function(data, status, xhr) {
                        if (data.success > 0) {
                            if (data.script) {
                                eval(data.script);
                                return;
                            }
                            if (data.redirect_url) {
                                $(blockId + '_progress_text').update('<?= __('Redirecting') ?>');
                                // decode html entities
                                window.location = jQuery('<div>').html(data.redirect_url).text();
                                return;
                            }
                            var successText = data.success_text;
                            <?php if ($this->getData('after_submission_form')) { ?>
                                $(blockId + '_sending_data').hide();
                                $(blockId + '_submit_button').enable();
                                $(blockId).reset();
                                if (typeof DROPZONE !== "undefined") {
                                    if (typeof DROPZONE._<?= $this->getUid() ?> !== "undefined") {
                                        for (var i = 0; i < DROPZONE._<?= $this->getUid() ?>.length; i++) {
                                            DROPZONE._<?= $this->getUid() ?>[i].reset();
                                        }
                                    }
                                }
                                swal.fire({
                                    title: '<?= $block->escapeJs(__('Success!')) ?>',
                                    html: successText,
                                    type: 'success',
                                    showCloseButton: true,
                                    buttonsStyling: false,
                                    customClass: {
                                        actions: 'modal__bottom-actions',
                                        confirmButton: 'button',
                                        cancelButton: 'button button--secondary'
                                    },
                                    confirmButtonAriaLabel: 'Ok',
                                    cancelButtonAriaLabel: 'Cancel',
                                    reverseButtons: true,
                                    width: 900,
                                    padding: '40px'
                                });
                            <?php } else { ?>
                                let isButtonModal = jQuery('.modal--button').length;

                                $(blockId + '_progress_text').update('<?= __('Complete') ?>');

                                if (isButtonModal) {
                                    swal.fire({
                                        title: '<?= $block->escapeJs(__('Success!')) ?>',
                                        html: successText,
                                        type: 'success',
                                        showCloseButton: true,
                                        buttonsStyling: false,
                                        customClass: {
                                            actions: 'modal__bottom-actions',
                                            confirmButton: 'button',
                                            cancelButton: 'button button--secondary'
                                        },
                                        confirmButtonAriaLabel: 'Ok',
                                        cancelButtonAriaLabel: 'Cancel',
                                        reverseButtons: true,
                                        width: 900,
                                        padding: '40px'
                                    });

                                    $(blockId + '_sending_data').hide();
                                    $(blockId + '_submit_button').enable();
                                    $(blockId).reset();
                                } else {
                                    Effect.Fade(blockId + '_form', {
                                        duration: 0.5,
                                        from: 1,
                                        to: 0,
                                        afterFinish: function() {
                                            $(blockId + '_success_text').update(successText).show();

                                            Effect.Fade(blockId + '_success_text', {
                                                duration: 0.5,
                                                from: 0,
                                                to: 1
                                            });
                                            if (<?= (int) $this->getData('scroll_to') ?>)
                                                Effect.ScrollTo(blockId + '_success_text', {
                                                    duration: '0.1',
                                                    offset: -window.innerHeight / 2
                                                });
                                        }
                                    });
                                }
                            <?php } ?>
                            <?= $this->getData('after_submission_script') ?>
                        } else {
                            $(blockId + '_submit_button').enable();
                            if ($(blockId + '_sending_data'))
                                $(blockId + '_sending_data').hide();
                            if ($(blockId + '_submit_button'))
                                $(blockId + '_submit_button').enable();
                            var errorTxt = '';
                            if (data.errors && typeof(data.errors) == "string") {
                                errorTxt = data.errors.unescapeHTML();
                            } else {
                                errorTxt = '<?= str_replace("'", "\'", __('Unknown error(s) occured')) ?>';
                            }

                            swal.fire({
                                title: '<?= $block->escapeJs(__('Error')) ?>',
                                html: errorTxt,
                                type: 'error',
                                showCloseButton: true,
                                buttonsStyling: false,
                                customClass: {
                                    actions: 'modal__bottom-actions',
                                    confirmButton: 'button',
                                    cancelButton: 'button button--secondary'
                                },
                                confirmButtonAriaLabel: 'Ok',
                                cancelButtonAriaLabel: 'Cancel',
                                reverseButtons: true,
                                width: 900,
                                padding: '40px'
                            });

                            if (data.script) {
                                eval(data.script);
                            }
                        }
                    },
                    error: function(xhr, status, errorThrown) {
                        console.log('Error happens. Try again.');
                        console.log(errorThrown);
                    }
                });
            });
        <?php } else { ?>

            // regular submit
            jQuery(jblockId).find('input[name=form_key]')[0].value = jQuery.cookie('form_key');
            $(blockId + '_submit_button').observe('click', function() {
                var form = webform_<?= $this->getUid() ?>;
                if (form.validator && form.validator.validate()) {
                    this.disable();
                    form.submit();
                }
            });
        <?php } ?>
    });
</script>
